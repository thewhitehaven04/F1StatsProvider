CREATE TABLE session_types (id VARCHAR(32) PRIMARY KEY);
INSERT INTO session_types
VALUES ('Practice 1'),
    ('Practice 2'),
    ('Practice 3'),
    ('Qualifying'),
    ('Sprint'),
    ('Sprint Qualifying'),
    ('Sprint Shootout'),
    ('Race');
CREATE TABLE event_formats (event_format_name VARCHAR(32) PRIMARY KEY);
INSERT INTO event_formats
VALUES ('conventional'),
    ('sprint'),
    ('sprint_shootout'),
    ('sprint_qualifying'),
    ('testing');
CREATE TABLE seasons (
    season_year SMALLINT Check(season_year > 0) PRIMARY KEY,
    description_text TEXT
);
INSERT INTO seasons
VALUES (2019, 'description'),
    (2020, 'description'),
    (2021, 'description'),
    (2022, 'description'),
    (2023, 'description'),
    (2024, 'description'),
    (2025, 'description');
CREATE TABLE teams (
    id SMALLINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    team_display_name VARCHAR(64) UNIQUE
);
CREATE TABLE team_season_colors (
    team_id SMALLINT,
    season_year SMALLINT,
    color CHAR(7),
    PRIMARY KEY(team_id, season_year),
    CONSTRAINT fk_seasons_season_year FOREIGN KEY(season_year) REFERENCES Seasons(season_year) ON DELETE RESTRICT,
    CONSTRAINT fk_teams_id FOREIGN KEY(team_id) REFERENCES Teams(id) ON DELETE RESTRICT
);
CREATE TABLE events (
    event_name TEXT,
    event_official_name TEXT,
    date_start DATE,
    country TEXT,
    season_year SMALLINT,
    event_format_name VARCHAR(32),
    PRIMARY KEY (event_name, season_year),
    CONSTRAINT fk_season_year FOREIGN KEY(season_year) REFERENCES Seasons(season_year) ON DELETE RESTRICT,
    CONSTRAINT fk_event_format_name FOREIGN KEY(event_format_name) REFERENCES event_formats(event_format_name) ON DELETE RESTRICT
);
CREATE TABLE event_sessions (
    event_name TEXT,
    season_year SMALLINT,
    session_type_id VARCHAR(32),
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    PRIMARY KEY (event_name, season_year, session_type_id),
    CONSTRAINT fk_event_name_season_year FOREIGN KEY (event_name, season_year) REFERENCES Events(event_name, season_year) ON DELETE RESTRICT,
    CONSTRAINT fk_session_type_id FOREIGN KEY (session_type_id) REFERENCES session_types(id) ON DELETE RESTRICT
);
CREATE TABLE Drivers (
    id VARCHAR(64) PRIMARY KEY,
    country_alpha3 VARCHAR(3),
    abbreviation VARCHAR(3),
    first_name text,
    last_name text
);
CREATE TABLE session_results (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    event_name TEXT,
    season_year SMALLINT,
    session_type_id VARCHAR(32),
    driver_id VARCHAR(64),
    position SMALLINT,
    CONSTRAINT fk_driver_id FOREIGN KEY (driver_id) REFERENCES Drivers(id) ON DELETE RESTRICT,
    CONSTRAINT fk_event_name_season_year FOREIGN KEY (event_name, season_year) REFERENCES Events(event_name, season_year) ON DELETE RESTRICT,
    CONSTRAINT fk_session_type_id FOREIGN KEY (session_type_id) REFERENCES session_types(id) ON DELETE RESTRICT
);
CREATE TABLE practice_session_results (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    laptime REAL,
    gap REAL,
    CONSTRAINT fk_session_result_id FOREIGN KEY (id) REFERENCES session_results(id) ON DELETE RESTRICT
);
CREATE TABLE qualifying_session_results (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    q1_laptime REAL,
    q2_laptime REAL,
    q3_laptime REAL,
    CONSTRAINT fk_session_result_id FOREIGN KEY (id) REFERENCES session_results(id) ON DELETE RESTRICT
);
CREATE TABLE race_session_results (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    total_time REAL,
    result_status TEXT,
    classified_position TEXT,
    points SMALLINT,
    gap REAL,
    CONSTRAINT fk_session_result_id FOREIGN KEY (id) REFERENCES session_results(id) ON DELETE RESTRICT
);
CREATE TABLE compounds (id VARCHAR(16) PRIMARY KEY);
INSERT INTO compounds
VALUES ('SOFT'),
    ('MEDIUM'),
    ('HARD'),
    ('INTERMEDIATE'),
    ('WET'),
    ('UNKNOWN'),
    ('TEST_UNKNOWN');
CREATE TABLE Laps (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    lap_number SMALLINT,
    sector_1_time REAL,
    sector_2_time REAL,
    sector_3_time REAL,
    speedtrap_1 SMALLINT,
    speedtrap_2 SMALLINT,
    speedtrap_fl SMALLINT,
    stint SMALLINT,
    event_name TEXT,
    compound_id VARCHAR(16),
    driver_id VARCHAR(64),
    session_type_id VARCHAR(32),
    season_year SMALLINT,
    CONSTRAINT fk_session_type_id FOREIGN KEY (session_type_id) REFERENCES session_types(id) ON DELETE RESTRICT,
    CONSTRAINT fk_event_name_season_year FOREIGN KEY (event_name, season_year) REFERENCES Events(event_name, season_year) ON DELETE RESTRICT,
    CONSTRAINT fk_compound_id FOREIGN KEY (compound_id) REFERENCES compounds(id) ON DELETE RESTRICT,
    CONSTRAINT fk_driver_id FOREIGN KEY (driver_id) REFERENCES Drivers(id) ON DELETE RESTRICT
);
CREATE TABLE telemetry_measurements (
    lap_id BIGINT,
    laptime_at REAL,
    speed REAL,
    rpm SMALLINT,
    brake SMALLINT,
    throttle SMALLINT,
    distance REAL,
    gear SMALLINT,
    PRIMARY KEY (lap_id, laptime_at),
    CONSTRAINT fk_lap_id FOREIGN KEY (lap_id) REFERENCES Laps(id) ON DELETE RESTRICT
);
CREATE TABLE session_weather_measurements (
    event_name TEXT,
    season_year SMALLINT,
    session_type_id VARCHAR(32),
    time_at TIMESTAMP,
    humidity SMALLINT,
    air_pressure SMALLINT,
    track_temp SMALLINT,
    air_temp SMALLINT,
    PRIMARY KEY (
        time_at,
        event_name,
        season_year,
        session_type_id
    ),
    CONSTRAINT fk_event_name_season_year_session_type_id_event_sessions FOREIGN KEY (event_name, season_year, session_type_id) REFERENCES event_sessions(event_name, season_year, session_type_id) ON DELETE RESTRICT
);
DROP TABLE race_session_results;
DROP TABLE practice_session_results;
DROP TABLE qualifying_session_results;
DROP TABLE session_results;
DROP TABLE drivers;
DROP TABLE seasons;
DROP TABLE event_sessions;
DROP TABLE telemetry_measurements;
DROP TABLE laps;
DROP TABLE events;
DROP TABLE event_formats;
DROP TABLE session_types;
DROP TABLE team_season_colors;
DROP TABLE teams;
DROP TABLE compounds;
-- DELETE FROM events;
-- DELETE FROM event_sessions;
-- DELETE FROM practice_session_results;
-- DELETE FROM laps 
-- WHERE session_type_id = 'Qualifying';
SELECT *
FROM laps
WHERE session_type_id IN ('Race', 'Sprint')
    AND event_name = 'Bahrain Grand Prix';
SELECT *
FROM events;