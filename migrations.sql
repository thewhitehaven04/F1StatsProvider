-- Active: 1744839569560@@127.0.0.1@5432
CREATE TABLE session_types (id VARCHAR(32) PRIMARY KEY);

INSERT INTO
    session_types
VALUES ('Practice 1'),
    ('Practice 2'),
    ('Practice 3'),
    ('Qualifying'),
    ('Sprint'),
    ('Sprint Qualifying'),
    ('Sprint Shootout'),
    ('Race');

CREATE TABLE event_formats (
    event_format_name VARCHAR(32) PRIMARY KEY
);

INSERT INTO
    event_formats
VALUES ('conventional'),
    ('sprint'),
    ('sprint_shootout'),
    ('sprint_qualifying'),
    ('testing');

CREATE TABLE seasons (
    season_year SMALLINT Check (season_year > 0) PRIMARY KEY,
    description_text TEXT
);

INSERT INTO
    seasons
VALUES (2019, 'description'),
    (2020, 'description'),
    (2021, 'description'),
    (2022, 'description'),
    (2023, 'description'),
    (2024, 'description'),
    (2025, 'description');

CREATE TABLE teams (
    id SMALLINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    team_display_name VARCHAR(64) UNIQUE
);

CREATE TABLE team_season_colors (
    team_id SMALLINT,
    season_year SMALLINT,
    color CHAR(7) NOT NULL,
    PRIMARY KEY (team_id, season_year),
    CONSTRAINT fk_seasons_season_year FOREIGN KEY (season_year) REFERENCES Seasons (season_year) ON DELETE RESTRICT,
    CONSTRAINT fk_teams_id FOREIGN KEY (team_id) REFERENCES Teams (id) ON DELETE RESTRICT
);

CREATE TABLE events (
    event_name TEXT,
    event_official_name TEXT NOT NULL,
    date_start DATE NOT NULL,
    country VARCHAR(3) NOT NULL,
    season_year SMALLINT,
    event_format_name VARCHAR(32),
    PRIMARY KEY (event_name, season_year),
    CONSTRAINT fk_season_year FOREIGN KEY (season_year) REFERENCES Seasons (season_year) ON DELETE RESTRICT,
    CONSTRAINT fk_event_format_name FOREIGN KEY (event_format_name) REFERENCES event_formats (event_format_name) ON DELETE RESTRICT
);

CREATE TABLE event_sessions (
    event_name TEXT,
    season_year SMALLINT,
    session_type_id VARCHAR(32),
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    PRIMARY KEY (
        event_name,
        season_year,
        session_type_id
    ),
    CONSTRAINT fk_event_name_season_year FOREIGN KEY (event_name, season_year) REFERENCES Events (event_name, season_year) ON DELETE RESTRICT,
    CONSTRAINT fk_session_type_id FOREIGN KEY (session_type_id) REFERENCES session_types (id) ON DELETE RESTRICT
);

CREATE TABLE Drivers (
    id VARCHAR(64) PRIMARY KEY,
    country_alpha3 VARCHAR(3) NOT NULL,
    abbreviation VARCHAR(3) NOT NULL,
    first_name text NOT NULL,
    last_name text NOT NULL
);

CREATE TABLE session_results (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    event_name TEXT,
    season_year SMALLINT,
    session_type_id VARCHAR(32),
    driver_id VARCHAR(64),
    position SMALLINT,
    CONSTRAINT fk_event_sessions_event_name_season_year_session_type_id FOREIGN KEY (
        event_name,
        season_year,
        session_type_id
    ) REFERENCES event_sessions (
        event_name,
        season_year,
        session_type_id
    ) ON DELETE RESTRICT,
);

CREATE TABLE practice_session_results (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    laptime REAL,
    gap REAL,
    CONSTRAINT fk_session_result_id FOREIGN KEY (id) REFERENCES session_results (id) ON DELETE RESTRICT
);

CREATE TABLE qualifying_session_results (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    q1_laptime REAL,
    q2_laptime REAL,
    q3_laptime REAL,
    CONSTRAINT fk_session_result_id FOREIGN KEY (id) REFERENCES session_results (id) ON DELETE RESTRICT
);

CREATE TABLE race_session_results (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    total_time REAL,
    result_status TEXT,
    classified_position TEXT,
    points SMALLINT,
    gap REAL,
    CONSTRAINT fk_session_result_id FOREIGN KEY (id) REFERENCES session_results (id) ON DELETE RESTRICT
);

CREATE TABLE compounds (id VARCHAR(16) PRIMARY KEY);

INSERT INTO
    compounds
VALUES ('SOFT'),
    ('MEDIUM'),
    ('HARD'),
    ('INTERMEDIATE'),
    ('WET'),
    ('UNKNOWN'),
    ('TEST_UNKNOWN');

CREATE TABLE Laps (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    lap_number SMALLINT,
    sector_1_time REAL,
    sector_2_time REAL,
    sector_3_time REAL,
    speedtrap_1 SMALLINT,
    speedtrap_2 SMALLINT,
    speedtrap_fl SMALLINT,
    stint SMALLINT NOT NULL,
    event_name TEXT NOT NULL,
    compound_id VARCHAR(16) NOT NULL,
    driver_id VARCHAR(64) NOT NULL,
    session_type_id VARCHAR(32),
    season_year SMALLINT,
    pit_in_time REAL,
    pit_out_time REAL,
    CONSTRAINT fk_session_type_id FOREIGN KEY (session_type_id) REFERENCES session_types (id) ON DELETE RESTRICT,
    CONSTRAINT fk_event_name_season_year FOREIGN KEY (event_name, season_year) REFERENCES Events (event_name, season_year) ON DELETE RESTRICT,
    CONSTRAINT fk_compound_id FOREIGN KEY (compound_id) REFERENCES compounds (id) ON DELETE RESTRICT,
    CONSTRAINT fk_driver_id FOREIGN KEY (driver_id) REFERENCES Drivers (id) ON DELETE RESTRICT
);

CREATE TABLE telemetry_measurements (
    lap_id BIGINT,
    laptime_at REAL NOT NULL,
    speed REAL NOT NULL,
    rpm SMALLINT NOT NULL,
    brake SMALLINT NOT NULL,
    throttle SMALLINT NOT NULL,
    distance REAL NOT NULL,
    gear SMALLINT NOT NULL,
    PRIMARY KEY (lap_id, laptime_at),
    CONSTRAINT fk_lap_id FOREIGN KEY (lap_id) REFERENCES Laps (id) ON DELETE RESTRICT
);

CREATE TABLE session_weather_measurements (
    event_name TEXT,
    season_year SMALLINT,
    session_type_id VARCHAR(32),
    time_at REAL,
    humidity SMALLINT NOT NULL,
    air_pressure SMALLINT NOT NULL,
    track_temp SMALLINT NOT NULL,
    air_temp SMALLINT NOT NULL,
    PRIMARY KEY (
        time_at,
        event_name,
        season_year,
        session_type_id
    ),
    CONSTRAINT fk_event_name_season_year_session_type_id_event_sessions FOREIGN KEY (
        event_name,
        season_year,
        session_type_id
    ) REFERENCES event_sessions (
        event_name,
        season_year,
        session_type_id
    ) ON DELETE RESTRICT
);

CREATE TABLE driver_numbers (
    driver_id VARCHAR(64),
    season_year SMALLINT,
    driver_number SMALLINT NOT NULL,
    PRIMARY KEY (driver_id, season_year),
    CONSTRAINT fk_driver_id FOREIGN KEY (driver_id) REFERENCES Drivers (id) ON DELETE RESTRICT,
    CONSTRAINT fk_season_year FOREIGN KEY (season_year) REFERENCES Seasons (season_year) ON DELETE RESTRICT
);

CREATE TABLE driver_team_changes (
    driver_id VARCHAR(64),
    timestamp_start TIMESTAMP NOT NULL,
    timestamp_end TIMESTAMP,
    team_id SMALLINT NOT NULL,
    PRIMARY KEY (driver_id, timestamp_start),
    CONSTRAINT fk_driver_id FOREIGN KEY (driver_id) REFERENCES Drivers (id) ON DELETE RESTRICT,
    CONSTRAINT fk_team_id FOREIGN KEY (team_id) REFERENCES Teams (id) ON DELETE RESTRICT
)

-- DROP TABLE race_session_results;
-- DROP TABLE practice_session_results;
-- DROP TABLE qualifying_session_results;
-- DROP TABLE session_results;
-- DROP TABLE drivers;
-- DROP TABLE seasons;
-- DROP TABLE event_sessions;
-- DROP TABLE telemetry_measurements;
-- DROP TABLE laps;
-- DROP TABLE events;
-- DROP TABLE event_formats;
-- DROP TABLE session_types;
-- DROP TABLE team_season_colors;
-- DROP TABLE teams;
-- DROP TABLE compounds;
-- WHERE session_type_id = 'Qualifying';
-- Session Practice 1
-- Season 2024
-- Event Bahrain Grand Prix
SELECT es.event_name, es.season_year, swm.time_at
FROM
    event_sessions AS es
    INNER JOIN session_weather_measurements AS swm ON swm.event_name = es.event_name
    AND swm.season_year = es.season_year
    AND swm.session_type_id = es.session_type_id
WHERE
    swm.event_name = 'Bahrain Grand Prix'
    AND es.season_year = 2024
    AND es.session_type_id = 'Practice 1';

UPDATE events
SET
    country = 'ARE'
WHERE
    country = 'United Arab Emirates';

CREATE VIEW practice_results AS
SELECT sr.id, sr.driver_id, psr.gap, psr.laptime, d.country_alpha3, CONCAT(
        d.first_name, ' ', d.last_name
    ) as driver_full_name, t.team_display_name, sr.event_name, sr.season_year, sr.session_type_id
FROM
    session_results AS sr
    INNER JOIN practice_session_results as psr ON sr.id = psr.id
    INNER JOIN event_sessions AS es ON (
        es.event_name = sr.event_name
        AND es.season_year = sr.season_year
        AND es.session_type_id = sr.session_type_id
    )
    INNER JOIN drivers AS d ON sr.driver_id = d.id
    INNER JOIN driver_team_changes AS dtc ON (
        dtc.timestamp_start <= es.start_time
        AND (
            dtc.timestamp_end >= es.start_time
            OR dtc.timestamp_end iS NULL
        )
        AND dtc.driver_id = d.id
    )
    INNER JOIN teams as t ON t.id = dtc.team_id
    INNER JOIN driver_numbers as dn ON dn.driver_id = d.id
    AND dn.season_year = sr.season_year
ORDER BY laptime ASC;